<!doctype html>
<html lang="ko">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>

    <!-- moment -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>

    <title>글 내용</title>
    <script>
        $(document).ready(function () {
            getTokenData();
            $('#complete-modify-button').hide();
        });

        // 사용자 토큰 확인 후 버튼
        function getTokenData() {
            $.ajax({
                async: true,
                type: 'GET',
                url: '/api/gettoken/<%=list.id%>',
                data: {},
                dataType: 'json',
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
                success: function (response) {
                    let presentNick = response['nickname'];
                    let commentNick = response['commentlist'];
                    for (let i = 0; i < commentNick.length; i++) {
                        let findNick = commentNick[i]['name'];
                        if (presentNick === findNick) {
                            console.log(commentNick[i]._id);
                            $(`#comment-modify-${commentNick[i]._id}`).show();
                            $(`#comment-delete-${commentNick[i]._id}`).show();
                        }
                    }
                    if (response['nickname'] === $('#wrote-name').attr('placeholder')) {
                        $('#modify_button').show();
                        $('#delete_button').show();
                    }
                }
            });
        }

        // 게시글 삭제하기 버튼 기능
        function deleteDetail() {
            $.ajax({
                async: true,
                type: 'POST',
                url: "delete/<%=list.id%>",
                dataType: 'json',
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
                data: {},
                success: function (response) {
                    if (response['success']) {
                        location.href = '/';
                        alert(response['success']);
                    } else {
                        alert(response['fail']);
                    }
                }
            });
        }

        // 게시글 수정하기 버튼 기능
        function toModify() {
            $.ajax({
                async: true,
                type: 'POST',
                url: "modify/<%=list.id%>",
                dataType: 'json',
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
                data: {},
                success: function (response) {
                    if (response['success']) {
                        alert(response['success'])
                        $('#wrote_contents').removeAttr('readonly');
                        $('#modify_button').hide();
                        $('#delete_button').hide();
                        $('#complete-modify-button').show();
                    } else {
                        alert(response['fail'])
                    }
                }
            });
        }

        // 게시글 수정 완료 버튼 기능
        function modifyComplete() {
            $.ajax({
                async: true,
                type: 'POST',
                url: 'completeModify/<%=list.id%>',
                dataType: 'json',
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
                data: { contents: $('#wrote_contents').val() },
                success: function (response) {
                    alert(response['success']);
                    location.reload();
                }
            })
        }

        function GotoLogin() {
            if (!localStorage.getItem('token')) {
                location.href = '/login';
                alert('로그인이 필요한 기능입니다!');
            }
        }

        function writeComment() {
            if (!localStorage.getItem('token')) {
                localStorage.href = '/login';
                alert('로그인이 필요한 기능입니다!');
            }
            else {
                if (!$('#input-comment').val()) {
                    alert('댓글 내용을 입력하세요!');
                } else {
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '/api/comment/<%=list.id%>',
                        dataType: 'json',
                        headers: {
                            authorization: `Bearer ${localStorage.getItem("token")}`
                        },
                        data: {
                            contents: $('#input-comment').val()
                        },
                        success: function (response) {
                            window.location.reload();
                            alert(response['success'])
                        }
                    });
                }
            }
        }

        // 댓글 삭제
        function deleteComment(commentId) {
            if (!confirm("정말 삭제하시겠습니까?")) { return; }
            $.ajax({
                async: true,
                type: 'POST',
                url: `/api/delcomment/${commentId}`,
                dataType: 'json',
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
                data: {},
                success: function (response) {
                    window.location.reload();
                    alert(response['success']);
                    console.log('삭제 작동 확인');
                },
                error: function (response) {
                    window.location.reload();
                    alert(response['fail'])
                }
            });
        }

        // 댓글 수정
        function toModifyComment(commentId) {
            $(`#comment-modifycomplete-${commentId}`).show();
            $(`#input-${commentId}`).show();
            $(`#input-${commentId}`).val($(`#comment-${commentId}`).text());
            $(`#comment-${commentId}`).hide();
            $(`#comment-modify-${commentId}`).hide();
            $(`#comment-delete-${commentId}`).hide();
        }

        // 댓글 수정완료
        function modifyComment(commentId) {
            $.ajax({
                async: true,
                type: 'POST',
                url: `/api/modicomment/${commentId}`,
                dataType: 'json',
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
                data: {
                    modified: $(`#input-${commentId}`).val()
                },
                success: function (response) {
                    if (response['notInput']) {
                        alert(response['notInput']);
                        return;
                    }
                    window.location.reload();
                    alert(response['success']);
                },
                error: function (response) {
                    window.location.reload();
                    alert(response['fail']);
                }
            });
        }
    </script>
</head>

<body>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon3">제목</span>
        </div>
        <input type="text" class="form-control" id="wrote-title" aria-describedby="basic-addon3"
            placeholder="<%=list.title %>" readonly>
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon3">작성자</span>
        </div>
        <input type="text" class="form-control" id="wrote-name" aria-describedby="basic-addon3"
            placeholder="<%=list.name%>" readonly>
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon3">작성날짜 및 시간</span>
        </div>
        <input type="text" class="form-control" id="wrote-date" aria-describedby="basic-addon3"
            placeholder="<%=moment(list.createDate).format('YYYY/MM/DD - HH:mm:ss')%>" readonly>
    </div>
    <textarea class="form-control" id="wrote_contents" rows="5" readonly><%=list.contents%></textarea>

    <div>
        <div class="input-group mb-3">
            <input type="text" id="input-comment" class="form-control" placeholder="댓글을 입력하세요."
                aria-label="Recipient's username" aria-describedby="basic-addon2" onclick="GotoLogin()">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" onclick="writeComment()">댓글쓰기</button>
            </div>
        </div>
        <h3>댓글</h3>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">내용</th>
                    <th scope="col">작성자</th>
                    <th scope="col">날짜</th>
                </tr>
            </thead>
            <tbody>
                <% for (let i=0; i < commentlist.length; i++) { %>
                    <tr>
                        <td>
                            <input style="display: none;  width: 600px;" id="input-<%=commentlist[i]._id%>">
                            <span id="comment-<%=commentlist[i]._id%>">
                                <%=commentlist[i].contents%>
                            </span>
                        </td>
                        <td>
                            <%=commentlist[i].name%>
                        </td>
                        <td>
                            <%=moment(commentlist[i].createDate).format('YYYY/MM/DD')%>
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" type="button" style="display: none;"
                                        id="comment-modify-<%=commentlist[i]._id%>"
                                        onclick="toModifyComment('<%=commentlist[i]._id%>')">수정</button>
                                    <button class="btn btn-primary" type="button" style="display: none;"
                                        id="comment-delete-<%=commentlist[i]._id%>"
                                        onclick="deleteComment('<%=commentlist[i]._id%>')">삭제</button>
                                    <button class="btn btn-primary" type="button" style="display: none;"
                                        id="comment-modifycomplete-<%=commentlist[i]._id%>"
                                        onclick="modifyComment('<%=commentlist[i]._id%>')">수정완료</button>
                                </span>
                        </td>
                    </tr>
                    <% } %>
            </tbody>
        </table>
    </div>

    <!-- Button trigger modal(modify) -->
    <button type="button" class="btn btn-primary" id="modify_button" onclick="toModify()" style="display: none;">
        수정하기
    </button>

    <!-- Button trigger modal(delete) -->
    <button type="button" class="btn btn-primary" id="delete_button" onclick="deleteDetail()" style="display: none;">
        삭제하기
    </button>
    <button type="button" class="btn btn-primary" id="complete-modify-button" onclick="modifyComplete()">
        수정완료하기
    </button>
</body>

</html>